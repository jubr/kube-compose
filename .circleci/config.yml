# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/configuration-reference
version: 2.1

orbs:
  go: circleci/go@1.9.0
  golangci-lint: timakin/golangci-lint@0.1.1
  gh: circleci/github-cli@2.2.0

commands:
  enhance-env:
    steps:
      - run:
          name: "Enhance env"
          command: |
            set -x
            ls -l /tmp/workspace/
            if [ ! -f /tmp/workspace/env ]; then
              V="$(git describe --tags | sed -r -e 's/(.+)-(.+)-(.+)/\1-\2/')"
              VTAG="$(git describe --tags --abbrev=0)"
              echo "VERSION='0.6.3+${V}'"                                          > /tmp/workspace/env
              echo "PRERELEASE=$( [ $V = $VTAG ] && echo false || echo true)"     >> /tmp/workspace/env
              echo "PRERELEASE_OPT=$( [ $V = $VTAG ] && echo '' || echo '-prerelease')" >> /tmp/workspace/env
              echo "CIRCLE_PROJECT_REPONAME=kube-compose"                         >> /tmp/workspace/env
              echo "CIRCLE_PROJECT_USERNAME=jubr"                                 >> /tmp/workspace/env
              echo "CIRCLE_REPOSITORY_URL=https://github.com/jubr/kube-compose"   >> /tmp/workspace/env
              echo "RELEASE_FILES='" /tmp/workspace/release/* "'"                 >> /tmp/workspace/env
            fi
            cat /tmp/workspace/env >> $BASH_ENV
            source /tmp/workspace/env
  versionize-source:
    steps:
      - run:
          name: "Versionize with ${VERSION}"
          command: |
            set -x
            source /tmp/workspace/env
            sed -i cmd/root.go -r \
              -e 's/(Version:          )".+"/\1"'${VERSION}'"/'
  build-one:
    parameters:
      GOOS:   { type: string }
      GOARCH: { type: string }
    steps:
      - run:
          name: "Build <<parameters.GOOS>> <<parameters.GOARCH>>"
          environment:
            GOOS: <<parameters.GOOS>>
            GOARCH: <<parameters.GOARCH>>
            CGO_ENABLED: 0
            GZIP_OPT: -9
          command: |
            set -x
            mkdir -p release
            R=${GOOS}_${GOARCH}
            go build -a -o release/kube-compose.${R} .
            tar --remove-files -zcf release/kube-compose.${R}.tar.gz release/kube-compose.${R}

jobs:

  build_and_test:
    executor:
      name: go/default
      tag: '1.18'
    steps:
      - checkout
      - attach_workspace:
          at: /tmp/workspace 
      - enhance-env
      - versionize-source
      - go/load-cache # Load cached Go modules.
      #- go/mod-download # Run 'go mod download'.
      - build-one: { GOOS: linux,  GOARCH: amd64 }
      - build-one: { GOOS: linux,  GOARCH: arm64 }
      - build-one: { GOOS: darwin, GOARCH: amd64 }
      - build-one: { GOOS: darwin, GOARCH: arm64 }
      - run:
          command: |
            set -x
            du -h release/*
      - go/save-cache
      - persist_to_workspace:
          root: .
          paths: release
      - persist_to_workspace:
          root: /tmp/workspace 
          paths: env

  deploy:
    executor:
      name: go/default # Use the default executor from the orb
      tag: '1.18'
    steps:
      - attach_workspace: { at: /tmp/workspace }
      - enhance-env
      - run:
          name: "Publish Release on GitHub"
          command: |
            set -x
            du -h /tmp/workspace/release/*
            curl -L "https://github.com/tcnksm/ghr/releases/download/v0.15.0/ghr_v0.15.0_linux_amd64.tar.gz" \
              | tar -zvx
            mv -v ghr_*/ghr ghr
            chmod a+x ghr
            ./ghr --version
            source /tmp/workspace/env
            #VERSION=v0.0.2
            echo "CIRCLE_PROJECT_REPONAME=$CIRCLE_PROJECT_REPONAME"
            echo CIRCLE_TAG=${CIRCLE_TAG}
            ./ghr -t ${GITHUB_TOKEN} \
                -u jubr \
                -r kube-compose \
                -c ${CIRCLE_SHA1} \
                -recreate \
                -replace \
                ${PRERELEASE_OPT} \
                -generatenotes \
                ${VERSION} \
                /tmp/workspace/release/

  test:
    executor:
      name: go/default
      tag: '1.18'
    steps:
      - checkout
      - go/load-cache
      - run:
          name: "get goveralls"
          command: |
            set -x
            go get     github.com/mattn/goveralls
            go install github.com/mattn/goveralls
            go get golang.org/x/crypto/ssh/terminal@v0.0.0-20210921155107-089bfa567519 
      # https://circleci.com/developer/orbs/orb/circleci/go 
      - go/test: # Runs 'go test ./...' but includes extensive parameterization for finer tuning.
          covermode: atomic
          failfast: true
          race: true
          coverprofile: coverage.txt
      - run:
          name: "run goveralls"
          command: |
            set -x
            #go test -covermode=count -coverpkg=./... -coverprofile=coverage.txt ./...
            ls -la $GOPATH/bin/
            $GOPATH/bin/goveralls -coverprofile=coverage.txt -service=circle-ci

# Orchestrate jobs using workflows
# See: https://circleci.com/docs/configuration-reference/#workflows
workflows:
  go-with-the-flow:
    jobs:
      - build_and_test
      - test
      #- golangci-lint/lint:
      #    directories: --timeout=600s -D wrapcheck
      - gh/release:
          # filters:
          #   branches:
          #     only:
          #       - master
          #       - main
          requires:
            - build_and_test
            #- test
          pre-steps:
            #- checkout
            - attach_workspace: { at: /tmp/workspace } # for release binaries
            - enhance-env
            - run:
                name: "Delete $VERSION release"
                command: |
                  set -x
                  rm -rvf * .[a-z]
                  ls -la
                  gh release delete \
                      "$VERSION" \
                      --yes \
                      --cleanup-tag \
                      --repo "${CIRCLE_REPOSITORY_URL}"
                    set +x
          version: 2.36.0
          prerelease: ${PRERELEASE}
          #notes-file: changelog.md
          tag: v0.0.4
          title: v0.0.4 Toddler steps
          #broken files:
          #files: /tmp/workspace/release/kube-compose.linux_amd64 #${RELEASE_FILES}
          additional_args: |
            /tmp/workspace/release/kube-compose.linux_amd64.tar.gz \
            /tmp/workspace/release/kube-compose.linux_arm64.tar.gz \
            /tmp/workspace/release/kube-compose.darwin_amd64.tar.gz \
            /tmp/workspace/release/kube-compose.darwin_arm64.tar.gz \
            --generate-notes
      - deploy:
          requires:
            - build_and_test
