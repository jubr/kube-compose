# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/configuration-reference
version: 2.1

orbs:
  go: circleci/go@1.7.3
  golangci-lint: timakin/golangci-lint@0.1.1

jobs:
  build_and_test: # this can be any name you choose
    executor:
      name: go/default
      tag: '1.16'
    steps:
      - checkout
      - go/load-cache # Load cached Go modules.
      #- go/mod-download # Run 'go mod download'.
      - run:
          name: "Build Linux + darwin" 
          command: |
            set -x
            export CGO_ENABLED=0
            export GOOS GOARCH
            export GZIP_OPT=-9
            mkdir release
            for T in linux darwin; do
              for A in amd64 arm64; do
                R=${T}_${A}
                GOOS=$T
                GOARCH=$A
                go build -a -installsuffix cgo \
                 -o release/kube-compose.${R} .
                tar -zcvf release/kube-compose.${R}.tar.gz release/kube-compose.${R}
                rm -f release/kube-compose.${R}
              done
            done
            ls -la release/
      - go/save-cache
      - persist_to_workspace:
          root: .
          paths: release
  deploy:
    executor:
      name: go/default # Use the default executor from the orb
      tag: '1.18'
    steps:
      - attach_workspace:
          at: /tmp/workspace 
      - run:
          name: "Publish Release on GitHub"
          command: |
            set -x
            ls -la /tmp/workspace/artifacts/ 
            export GOPROXY=https://proxy.golang.org 
            go install github.com/tcnksm/ghr@latest
            VERSION=v0.0.1
            echo CIRCLE_TAG=${CIRCLE_TAG}
            ghr -t ${GITHUB_TOKEN} \
                -u ${CIRCLE_PROJECT_USERNAME} \
                -r kube-compose \
                -c ${CIRCLE_SHA1} \
                -delete \
                ${VERSION} \
                /tmp/workspace/release/ 
  lint:
    executor:
      name: go/default
      tag: '1.12'
    steps:
      - checkout
      - run:
          name: "golangci-lint"
          command: |
            # binary will be $(go env GOPATH)/bin/golangci-lint
            curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.54.2
            golangci-lint --version
            export CGO_ENABLED=0
            export GOOS
            export GOPROXY=https://proxy.golang.org
            # https://golangci-lint.run/usage/quick-start 
            golangci-lint run -D wrapchwck

  test:
    executor:
      name: go/default
      tag: '1.18'
    steps:
      - checkout
      - go/load-cache
      - run:
          name: "get goveralls"
          command: | 
            go get github.com/mattn/goveralls
            go get golang.org/x/crypto/ssh/terminal@v0.0.0-20210921155107-089bfa567519 
      - go/test: # Runs 'go test ./...' but includes extensive parameterization for finer tuning.
          covermode: atomic
          failfast: true
          race: true

# Orchestrate jobs using workflows
# See: https://circleci.com/docs/configuration-reference/#workflows
workflows:
  go-with-the-flow:
    jobs:
      - build_and_test
      - test
      - lint
      - golangci-lint/lint:
          directories: --timeout=30s -D wrapcheck
      - deploy:
          requires:
            - build_and_test
